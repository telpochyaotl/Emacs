#+TITLE: Emacs Configuration in modular Literate Org Files

* TODO - Put my this in git
* Modular Literate Configuration

This is my (Alex Wallace's) Emacs configuration written as a series of literate LSP Org Mode documents which are automatically tangled (all ~src~ blocks extracted to) and saved as ~.el~ files and loaded by the small ~init.el~ file in this folder all at Emacs at startup. 

Detailed documentation on Emacs can be read by ~M-x info~, and on /Org Mode/ by typing ~M-x org-info~, In there, there is a /Working with Source Code/ section on how all these code blocks work.

- Some functions may be prefixed with ~aw/~ namespace for uniqueness.
  
Without further ado, here starts the configuration sections.

- TODO: Until I automate the export of the following to init.el, the following should be it's content.

#+begin_src emacs-lisp :file init.el
  ;; All my Emacs configuration is broken down in modular literate org files
  ;; as explained and organized in MyConfig.org

  ;;; init.el --- Where all the magic begins
  ;;
  ;; This file loads Org and then loads the rest of our Emacs initialization from Emacs lisp
  ;; embedded in literate Org files.

  ;; Load up Org Mode and (now included) Org Babel for elisp embedded in Org Mode files
  (setq dotfiles-dir (file-name-directory (or (buffer-file-name) load-file-name)))

  (let* ((org-dir (expand-file-name
		   "lisp" (expand-file-name
			   "org" (expand-file-name
				  "src" dotfiles-dir))))
	 (org-contrib-dir (expand-file-name
			   "lisp" (expand-file-name
				   "contrib" (expand-file-name
					      ".." org-dir))))
	 (load-path (append (list org-dir org-contrib-dir)
			    (or load-path nil))))
    ;; load up Org and Org-babel
    (require 'org)
    (require 'ob-tangle))

  ;; load up all literate org-mode files in this directory
  (mapc #'org-babel-load-file (directory-files dotfiles-dir t "\\.org$"))

  ;;; init.el ends here
#+end_src

* Modules
  
- [[file:package.org][Package System Setup]]
- [[file:ui.org][UI Customizations]]
- [[file:mini-buffer.org][Minibuffer and Help enhancements]]
- [[file:org.org][Org Mode Customizations]]
- [[file:dev.org][Development oriented Customizations]]




